"""Add links and emails to JobPost

Revision ID: 4343153540ef
Revises: a9f69413e017
Create Date: 2025-08-24 15:36:32.161894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4343153540ef'
down_revision: Union[str, Sequence[str], None] = 'a9f69413e017'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job_posts', sa.Column('links', sa.Text(), nullable=True))
    op.add_column('job_posts', sa.Column('emails', sa.Text(), nullable=True))
    op.alter_column('job_posts', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('job_posts', 'sender',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('job_posts', 'message',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_index(op.f('ix_job_posts_sender'), table_name='job_posts')
    op.drop_column('job_posts', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job_posts', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_job_posts_sender'), 'job_posts', ['sender'], unique=False)
    op.alter_column('job_posts', 'message',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('job_posts', 'sender',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('job_posts', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('job_posts', 'emails')
    op.drop_column('job_posts', 'links')
    # ### end Alembic commands ###
